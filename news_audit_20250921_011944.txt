=== SecondMind News Audit ===
HEAD: 74f49af  | base: 38658c8

== Commit history (news + gradle) since 38658c8 ==
74f49af debug(news): show counts of non-blank titles/descriptions
39abd6f feat(news): add source • time meta row (Samsung-style); robust ISO→relative time helpers
c68b6b0 feat(news): Samsung-style polish — Spanish header, taller hero, scrim, darker cards, ellipsized titles
5d8bd57 fix(news): draw Text above images by adding Modifier.zIndex(1f) (safe Text-only patch)
7d099c3 Revert "fix(news): ensure text/content overlays render above images via .zIndex(1f)"
8834deb fix(news): ensure text/content overlays render above images via .zIndex(1f)
459feaf fix: ensure runtime-saveable dependency present
e0d0595 fix(news): capture LocalContext before onClick; reinsert HomeCarousel sheet state/host; ensure tap wiring
213042f fix(news): place Play IconButton after Text() in NewsPanel hero block
bcc6bf3 home/news: finalize — remove any remaining lower NewsPanel blocks; wire compact card tap; ensure TTS Play in full feed
c5e035f home/news: keep only compact top card (tap opens full feed via bottom sheet); remove lower duplicate; TTS Play wired to Reader/TRS
6b9588e home/news: compact card (tap opens full feed), remove duplicate section; add /news route; TTS play wired to Reader/TRS

== File diff summary ==
 app/build.gradle                                   |   1 +
 .../java/com/secondmind/minimal/news/NewsPanel.kt  |  85 +++++++++--
 .../com/secondmind/minimal/news/NewsPanel.kt.bak   | 170 +++++++++++++++++++++
 .../secondmind/minimal/news/NewsPanel.kt.bak_bound | 170 +++++++++++++++++++++
 4 files changed, 417 insertions(+), 9 deletions(-)

== NewsApi.kt signature (HEAD) ==
27:    suspend fun top(
28:        @Query("category") category: String? = null,
29:        @Query("country") country: String = "us",
30:        @Query("apiKey") apiKey: String

== NewsApi.kt signature (at 38658c8) ==
27:    suspend fun top(
28:        @Query("category") category: String? = null,
29:        @Query("country") country: String = "us",
30:        @Query("apiKey") apiKey: String

== Call site in NewsPanel (HEAD) ==
47:    fun tabToCategory(i: Int): String? = when (i) {
61:                api.top(category = tabToCategory(tab), apiKey = BuildConfig.NEWS_API_KEY)

== Call site in NewsPanel (at 38658c8) ==
34:    fun tabToCategory(i: Int): String? = when (i) {
48:                api.top(category = tabToCategory(tab), apiKey = BuildConfig.NEWS_API_KEY)

== Tab mapping function (HEAD) ==
47:    fun tabToCategory(i: Int): String? = when (i) {
    fun tabToCategory(i: Int): String? = when (i) {
        1 -> "technology"
        2 -> "business"
        3 -> "general"
        4 -> "sports"
        5 -> "science"
        else -> "general"
    }

    LaunchedEffect(tab) {
        isLoading = true
        try {
            val api = newsApi()
            val res = withContext(Dispatchers.IO) {
                api.top(category = tabToCategory(tab), apiKey = BuildConfig.NEWS_API_KEY)
            }
            articles = if (res.status == "ok") res.articles.orEmpty() else emptyList()
        } catch (_: Throwable) { articles = emptyList() } finally { isLoading = false }
    }

    Column(
        modifier = modifier
            .fillMaxWidth()
            .clip(RoundedCornerShape(20.dp))
            .background(MaterialTheme.colorScheme.surfaceVariant)
            .padding(16.dp)
    ) {
        Row(Modifier.fillMaxWidth(), verticalAlignment = Alignment.CenterVertically) {
            Text("Noticias destacadas", style = MaterialTheme.typography.headlineSmall, modifier = Modifier.zIndex(1f).weight(1f))
    val __titles = remember(articles) { articles.count { !((it.title?: "").isBlank()) } }
    val __descs = remember(articles) { articles.count { !((it.description?: "").isBlank()) } }
    Text("DEBUG: titles= • descs=", style = MaterialTheme.typography.labelSmall, color = MaterialTheme.colorScheme.onSurface.copy(alpha=0.7f))
        }
        Spacer(Modifier.height(8.dp))

        ScrollableTabRow(
            selectedTabIndex = tab,
            edgePadding = 0.dp,
            containerColor = MaterialTheme.colorScheme.surfaceVariant,
            contentColor = MaterialTheme.colorScheme.primary
        ) {

== Tab mapping function (at 38658c8) ==
34:    fun tabToCategory(i: Int): String? = when (i) {
    fun tabToCategory(i: Int): String? = when (i) {
        1 -> "technology"
        2 -> "business"
        3 -> "general"
        4 -> "sports"
        5 -> "science"
        else -> "general"
    }

    LaunchedEffect(tab) {
        isLoading = true
        try {
            val api = newsApi()
            val res = withContext(Dispatchers.IO) {
                api.top(category = tabToCategory(tab), apiKey = BuildConfig.NEWS_API_KEY)
            }
            articles = if (res.status == "ok") res.articles.orEmpty() else emptyList()
        } catch (_: Throwable) { articles = emptyList() } finally { isLoading = false }
    }

    Column(
        modifier = modifier
            .fillMaxWidth()
            .clip(RoundedCornerShape(20.dp))
            .background(MaterialTheme.colorScheme.surfaceVariant)
            .padding(16.dp)
    ) {
        Row(Modifier.fillMaxWidth(), verticalAlignment = Alignment.CenterVertically) {
            Text("News", style = MaterialTheme.typography.headlineSmall, modifier = Modifier.weight(1f))
        }
        Spacer(Modifier.height(8.dp))

        ScrollableTabRow(
            selectedTabIndex = tab,
            edgePadding = 0.dp,
            containerColor = MaterialTheme.colorScheme.surfaceVariant,
            contentColor = MaterialTheme.colorScheme.primary
        ) {
            tabs.forEachIndexed { i, label ->
                Tab(selected = tab == i, onClick = { tab = i }, text = { Text(label) })
            }

== BuildConfig key exposure (HEAD) ==
app/build.gradle:15:        buildConfigField "String", "NEWS_API_KEY", "\"45b180a1ea0f45018aa89b36c1e49cf1\""

== Diff chunks (API + panel) ==
diff --git a/app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt b/app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt
index 9fe45b7..f2b85f8 100644
--- a/app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt
+++ b/app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt
@@ -1,4 +1,13 @@
 package com.secondmind.minimal.news
+import java.util.TimeZone
+import java.util.Locale
+import java.text.SimpleDateFormat
+import android.text.format.DateUtils
+import androidx.compose.material3.CardDefaults
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.Brush
+import androidx.compose.ui.draw.drawWithContent
+import androidx.compose.ui.zIndex
 
 import android.content.Intent
 import android.net.Uri
@@ -22,6 +31,10 @@ import coil.compose.AsyncImage
 import com.secondmind.minimal.BuildConfig
 import kotlinx.coroutines.Dispatchers
 import kotlinx.coroutines.withContext
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.PlayArrow
+import com.secondmind.minimal.tts.Reader
 
 @Composable
 fun NewsPanel(modifier: Modifier = Modifier, initialTab: Int = 1) {
@@ -59,7 +72,10 @@ fun NewsPanel(modifier: Modifier = Modifier, initialTab: Int = 1) {
             .padding(16.dp)
     ) {
         Row(Modifier.fillMaxWidth(), verticalAlignment = Alignment.CenterVertically) {
-            Text("News", style = MaterialTheme.typography.headlineSmall, modifier = Modifier.weight(1f))
+            Text("Noticias destacadas", style = MaterialTheme.typography.headlineSmall, modifier = Modifier.zIndex(1f).weight(1f))
+    val __titles = remember(articles) { articles.count { !((it.title?: "").isBlank()) } }
+    val __descs = remember(articles) { articles.count { !((it.description?: "").isBlank()) } }
+    Text("DEBUG: titles= • descs=", style = MaterialTheme.typography.labelSmall, color = MaterialTheme.colorScheme.onSurface.copy(alpha=0.7f))
         }
         Spacer(Modifier.height(8.dp))
 
@@ -77,7 +93,7 @@ fun NewsPanel(modifier: Modifier = Modifier, initialTab: Int = 1) {
         Spacer(Modifier.height(12.dp))
 
         if (isLoading) {
-            Box(Modifier.fillMaxWidth().height(140.dp), contentAlignment = Alignment.Center) {
+            Box(Modifier.fillMaxWidth().height(220.dp), contentAlignment = Alignment.Center) {
                 CircularProgressIndicator()
             }
             return@Column
@@ -97,7 +113,7 @@ fun NewsPanel(modifier: Modifier = Modifier, initialTab: Int = 1) {
         }
 
         LazyColumn(
-            modifier = Modifier.fillMaxWidth().heightIn(min = 0.dp, max = 480.dp),
+            modifier = Modifier.fillMaxWidth().heightIn(min = 220.dp, max = 480.dp),
             verticalArrangement = Arrangement.spacedBy(8.dp),
             contentPadding = PaddingValues(bottom = 4.dp)
         ) {
@@ -111,26 +127,28 @@ fun NewsPanel(modifier: Modifier = Modifier, initialTab: Int = 1) {
 
 @Composable
 private fun NewsHeroCard(article: NewsArticle, onOpen: (String?) -> Unit, onRefresh: () -> Unit) {
-    Card(modifier = Modifier.fillMaxWidth(), shape = RoundedCornerShape(16.dp)) {
+    Card(modifier = Modifier.fillMaxWidth(), shape = RoundedCornerShape(16.dp), colors = CardDefaults.cardColors(containerColor = MaterialTheme.colorScheme.surfaceVariant)) {
         Column(Modifier.padding(12.dp)) {
             if (!article.urlToImage.isNullOrBlank()) {
                 AsyncImage(
                     model = article.urlToImage,
                     contentDescription = null,
-                    modifier = Modifier.fillMaxSize().height(140.dp).clip(RoundedCornerShape(12.dp)),
+                    modifier = Modifier.fillMaxSize().height(220.dp).clip(RoundedCornerShape(12.dp)),
                     contentScale = ContentScale.Crop
                 )
                 Spacer(Modifier.height(10.dp))
             }
+            val ctx = LocalContext.current
             Text(article.title ?: "(no title)", style = MaterialTheme.typography.titleMedium,
                  maxLines = 3, overflow = TextOverflow.Ellipsis)
-            Spacer(Modifier.height(8.dp))
+            IconButton(onClick = { Reader.speak(ctx,  article.title ?: "") }) { Icon(Icons.Filled.PlayArrow, contentDescription = "Read") }
+Spacer(Modifier.height(8.dp))
             Row(horizontalArrangement = Arrangement.spacedBy(12.dp)) {
                 OutlinedButton(onClick = { onOpen(article.url) }) { Text("Open") }
                 OutlinedButton(onClick = onRefresh) { Text("Refresh") }
             }
             Spacer(Modifier.height(4.dp))
-            Text(article.source?.name ?: "", style = MaterialTheme.typography.labelMedium)
+            MetaRow(article.source?.name, null)
         }
     }
 }
@@ -143,7 +161,7 @@ private fun NewsCompactCard(article: NewsArticle, onOpen: (String?) -> Unit) {
                 Text(article.title ?: "(no title)", style = MaterialTheme.typography.bodyLarge,
                      maxLines = 2, overflow = TextOverflow.Ellipsis)
                 Spacer(Modifier.height(4.dp))
-                Text((article.source?.name ?: "").lowercase(), style = MaterialTheme.typography.labelMedium)
+                MetaRow(article.source?.name, null)
             }
             Spacer(Modifier.width(12.dp))
             Box(Modifier.size(56.dp).clip(RoundedCornerShape(10.dp))) {
@@ -163,9 +181,58 @@ private fun MarketsStrip() {
     Row(Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.spacedBy(8.dp)) {
         listOf("AAPL +1.2%", "NVDA +0.8%", "MSFT -0.3%", "TSLA +2.4%", "GOOGL +0.1%").forEach { t ->
             Surface(shape = RoundedCornerShape(12.dp), tonalElevation = 1.dp) {
-                Text(t, modifier = Modifier.padding(horizontal = 10.dp, vertical = 6.dp),
+                Text(t, modifier = Modifier.zIndex(1f).padding(horizontal = 10.dp, vertical = 6.dp),
                      style = MaterialTheme.typography.labelLarge)
             }
         }
     }
 }
+private fun Modifier.bottomScrim(): Modifier = this.drawWithContent {
+  drawContent()
+  drawRect(
+    Brush.verticalGradient(
+      colors = listOf(
+        Color.Black.copy(alpha = 0.00f),
+        Color.Black.copy(alpha = 0.40f),
+        Color.Black.copy(alpha = 0.88f)
+      )
+    )
+  )
+}
+
+@Composable
+private fun MetaRow(source: String?, publishedAt: String?) {
+  val s = source?.takeIf { it.isNotBlank() }
+  val t = relativeTimeOrNull(publishedAt)
+  val text = listOfNotNull(s, t).joinToString(" • ")
+  if (text.isNotBlank()) {
+    Text(
+      text,
+      style = MaterialTheme.typography.labelMedium,
+      color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.8f)
+    )
+  }
+}
+
+private fun relativeTimeOrNull(iso: String?): String? {
+  if (iso.isNullOrBlank()) return null
+  val patterns = arrayOf(
+    "yyyy-MM-ddTHH:mm:ssZ",
+    "yyyy-MM-ddTHH:mm:ss.SSSZ",
+    "yyyy-MM-ddTHH:mm:ssXXX",
+    "yyyy-MM-ddTHH:mm:ss.SSSXXX"
+  )
+  for (p in patterns) {
+    try {
+      val sdf = SimpleDateFormat(p, Locale.US).apply {
+        timeZone = TimeZone.getTimeZone("UTC")
+        isLenient = true
+      }
+      val ms = sdf.parse(iso)?.time ?: continue
+      return DateUtils.getRelativeTimeSpanString(
+        ms, System.currentTimeMillis(), DateUtils.MINUTE_IN_MILLIS
+      ).toString()
+    } catch (_: Exception) { }
+  }
+  return null
+}

== Quick presence check of critical fields ==
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak_bound:115:            if (!article.urlToImage.isNullOrBlank()) {
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak_bound:117:                    model = article.urlToImage,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak_bound:124:            Text(article.title ?: "(no title)", style = MaterialTheme.typography.titleMedium,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak_bound:142:                Text(article.title ?: "(no title)", style = MaterialTheme.typography.bodyLarge,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak_bound:149:                if (!article.urlToImage.isNullOrBlank()) {
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak_bound:150:                    AsyncImage(model = article.urlToImage, contentDescription = null,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:132:            if (!article.urlToImage.isNullOrBlank()) {
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:134:                    model = article.urlToImage,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:142:            Text(article.title ?: "(no title)", style = MaterialTheme.typography.titleMedium,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:144:            IconButton(onClick = { Reader.speak(ctx,  article.title ?: "") }) { Icon(Icons.Filled.PlayArrow, contentDescription = "Read") }
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:161:                Text(article.title ?: "(no title)", style = MaterialTheme.typography.bodyLarge,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:168:                if (!article.urlToImage.isNullOrBlank()) {
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt:169:                    AsyncImage(model = article.urlToImage, contentDescription = null,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak:115:            if (!article.urlToImage.isNullOrBlank()) {
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak:117:                    model = article.urlToImage,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak:124:            Text(article.title ?: "(no title)", style = MaterialTheme.typography.titleMedium,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak:142:                Text(article.title ?: "(no title)", style = MaterialTheme.typography.bodyLarge,
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak:149:                if (!article.urlToImage.isNullOrBlank()) {
app/src/main/java/com/secondmind/minimal/news/NewsPanel.kt.bak:150:                    AsyncImage(model = article.urlToImage, contentDescription = null,

