name: Android APK (repo)
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print repo SHA and tree
        run: |
          echo "SHA=$(git rev-parse HEAD)"
          ls -la
          ls -la app || true
          echo "Expect NEWS_BUILD_MARK in MainActivity:"
          grep -n 'NEWS_BUILD_MARK' app/src/main/java/com/secondmind/minimal/MainActivity.kt || true

      - name: Ensure marker present (fail if not)
        run: |
          grep -q 'NEWS_BUILD_MARK' app/src/main/java/com/secondmind/minimal/MainActivity.kt \
            || { echo "Marker missing; wrong tree or stale code"; exit 1; }

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle wrapper 8.7
        run: ./gradlew wrapper --gradle-version 8.7

      - name: Build Debug
        run: ./gradlew --no-daemon clean :app:assembleDebug

      - name: Compute meta (version/appId/sha)
        id: meta
        run: |
          VNAME=$(./gradlew -q :app:printVersionName 2>/dev/null || true)
          if [ -z "$VNAME" ]; then
            VNAME=$(grep -oP 'versionName\s*"\K[^"]+' app/build.gradle || echo "unknown")
          fi
          AID=$(grep -oP 'applicationId\s*"\K[^"]+' app/build.gradle || echo "com.secondmind.minimal")
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "vname=$VNAME" >> "$GITHUB_OUTPUT"
          echo "aid=$AID"     >> "$GITHUB_OUTPUT"
          echo "sha=$SHORT_SHA" >> "$GITHUB_OUTPUT"
          echo "VersionName=$VNAME  AppId=$AID  SHA=$SHORT_SHA"
          ls -lh app/build/outputs/apk/debug

      - name: Upload debug APK (unique)
        uses: actions/upload-artifact@v4
        with:
          name: sm-app-debug-${{ steps.meta.outputs.vname }}-${{ steps.meta.outputs.sha }}
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
